// <auto-generated />
//
// To parse this JSON data, add NuGet 'System.Text.Json' then do:
//
//    using WeChatPublisher.RequestModel;
//
//    var goodModel = GoodModel.FromJson(jsonString);
#nullable enable
#pragma warning disable CS8618
#pragma warning disable CS8601
#pragma warning disable CS8603

namespace WeChatPublish.RequestModel
{
    using System;
    using System.Collections.Generic;

    using System.Text.Json;
    using System.Text.Json.Serialization;
    using System.Globalization;

    public partial class GoodModel
    {
        [JsonPropertyName("list")]
        public List[] List { get; set; }

        [JsonPropertyName("total_count")]
        public long TotalCount { get; set; }

        [JsonPropertyName("ret")]
        public long Ret { get; set; }

        [JsonPropertyName("traceId")]
        public Guid TraceId { get; set; }
    }

    public partial class List
    {
        [JsonPropertyName("product_id")]
        public string ProductId { get; set; }

        [JsonPropertyName("warehouse_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long WarehouseId { get; set; }

        [JsonPropertyName("source")]
        public long Source { get; set; }

        [JsonPropertyName("source_name")]
        public string SourceName { get; set; }

        [JsonPropertyName("main_img")]
        public Uri MainImg { get; set; }

        [JsonPropertyName("thumbnail_img_url")]
        public Uri ThumbnailImgUrl { get; set; }

        [JsonPropertyName("product_name")]
        public string ProductName { get; set; }

        [JsonPropertyName("selling_points")]
        public object[] SellingPoints { get; set; }

        [JsonPropertyName("current_price")]
        public long CurrentPrice { get; set; }

        [JsonPropertyName("original_price")]
        public long OriginalPrice { get; set; }

        [JsonPropertyName("commission")]
        public long Commission { get; set; }

        [JsonPropertyName("commission_rate")]
        public double CommissionRate { get; set; }

        [JsonPropertyName("sales_tips")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SalesTips { get; set; }

        [JsonPropertyName("recommend_reason")]
        public string RecommendReason { get; set; }

        [JsonPropertyName("skuspec")]
        public string Skuspec { get; set; }

        [JsonPropertyName("skudesc")]
        public string Skudesc { get; set; }

        [JsonPropertyName("brand_name")]
        public string BrandName { get; set; }

        [JsonPropertyName("h5_page")]
        public string H5Page { get; set; }

        [JsonPropertyName("comments")]
        public long Comments { get; set; }

        [JsonPropertyName("first_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long FirstCategoryId { get; set; }

        [JsonPropertyName("second_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SecondCategoryId { get; set; }

        [JsonPropertyName("third_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ThirdCategoryId { get; set; }

        [JsonPropertyName("first_category_name")]
        public string FirstCategoryName { get; set; }

        [JsonPropertyName("second_category_name")]
        public string SecondCategoryName { get; set; }

        [JsonPropertyName("third_category_name")]
        public string ThirdCategoryName { get; set; }

        [JsonPropertyName("shop_name")]
        public string ShopName { get; set; }

        [JsonPropertyName("img_list")]
        public Uri[] ImgList { get; set; }

        [JsonPropertyName("wx_miniprogram_link")]
        public string WxMiniprogramLink { get; set; }

        [JsonPropertyName("wx_miniprogram_appid")]
        public string WxMiniprogramAppid { get; set; }

        [JsonPropertyName("qq_miniprogram_link")]
        public string QqMiniprogramLink { get; set; }

        [JsonPropertyName("qq_miniprogram_appid")]
        public string QqMiniprogramAppid { get; set; }

        [JsonPropertyName("sku_stock")]
        public long SkuStock { get; set; }

        [JsonPropertyName("audit_state")]
        public long AuditState { get; set; }

        [JsonPropertyName("coupon")]
        public Coupon Coupon { get; set; }

        [JsonPropertyName("spu_id")]
        public string SpuId { get; set; }

        [JsonPropertyName("score")]
        public long Score { get; set; }

        [JsonPropertyName("kol_ctr_score")]
        public long KolCtrScore { get; set; }

        [JsonPropertyName("merge_state")]
        public long MergeState { get; set; }

        [JsonPropertyName("recall_type")]
        public long RecallType { get; set; }

        [JsonPropertyName("exp_url")]
        public string ExpUrl { get; set; }

        [JsonPropertyName("click_url")]
        public string ClickUrl { get; set; }

        [JsonPropertyName("labels")]
        public long[] Labels { get; set; }

        [JsonPropertyName("origin_commission")]
        public long OriginCommission { get; set; }

        [JsonPropertyName("origin_commission_rate")]
        public double OriginCommissionRate { get; set; }

        [JsonPropertyName("recall_from_bit")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long RecallFromBit { get; set; }

        [JsonPropertyName("result_type")]
        public long ResultType { get; set; }

        [JsonPropertyName("basic_info")]
        public BasicInfo BasicInfo { get; set; }

        [JsonPropertyName("sku_id")]
        public string SkuId { get; set; }

        [JsonPropertyName("source_text")]
        public string SourceText { get; set; }

        [JsonPropertyName("article_template")]
        public bool ArticleTemplate { get; set; }
    }

    public partial class BasicInfo
    {
        [JsonPropertyName("product_id")]
        public string ProductId { get; set; }

        [JsonPropertyName("warehouse_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long WarehouseId { get; set; }

        [JsonPropertyName("source")]
        public long Source { get; set; }

        [JsonPropertyName("source_name")]
        public string SourceName { get; set; }

        [JsonPropertyName("product_name")]
        public string ProductName { get; set; }

        [JsonPropertyName("current_price")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long CurrentPrice { get; set; }

        [JsonPropertyName("original_price")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long OriginalPrice { get; set; }

        [JsonPropertyName("commission")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Commission { get; set; }

        [JsonPropertyName("commission_rate")]
        public long CommissionRate { get; set; }

        [JsonPropertyName("origin_commission")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long OriginCommission { get; set; }

        [JsonPropertyName("origin_commission_rate")]
        public long OriginCommissionRate { get; set; }

        [JsonPropertyName("sale_state")]
        public long SaleState { get; set; }

        [JsonPropertyName("audit_state")]
        public long AuditState { get; set; }

        [JsonPropertyName("merge_state")]
        public long MergeState { get; set; }

        [JsonPropertyName("main_image_url")]
        public Uri MainImageUrl { get; set; }

        [JsonPropertyName("sku_selling_points")]
        public object[] SkuSellingPoints { get; set; }

        [JsonPropertyName("skudesc")]
        public string Skudesc { get; set; }

        [JsonPropertyName("sku_stock")]
        public long SkuStock { get; set; }

        [JsonPropertyName("category_info")]
        public CategoryInfo CategoryInfo { get; set; }

        [JsonPropertyName("sale")]
        public Sale Sale { get; set; }

        [JsonPropertyName("coupon")]
        public Coupon Coupon { get; set; }

        [JsonPropertyName("movie")]
        public object Movie { get; set; }

        [JsonPropertyName("wx_miniprogram_link")]
        public string WxMiniprogramLink { get; set; }

        [JsonPropertyName("wx_miniprogram_appid")]
        public string WxMiniprogramAppid { get; set; }

        [JsonPropertyName("product_label_list")]
        public long[] ProductLabelList { get; set; }

        [JsonPropertyName("product_label_name_list")]
        public string[] ProductLabelNameList { get; set; }

        [JsonPropertyName("qq_miniprogram_link")]
        public string QqMiniprogramLink { get; set; }

        [JsonPropertyName("qq_miniprogram_appid")]
        public string QqMiniprogramAppid { get; set; }

        [JsonPropertyName("h5_page")]
        public Uri H5Page { get; set; }

        [JsonPropertyName("origin_audit_state")]
        public long OriginAuditState { get; set; }

        [JsonPropertyName("promote_state")]
        public long PromoteState { get; set; }

        [JsonPropertyName("sku_id")]
        public string SkuId { get; set; }

        [JsonPropertyName("product_sub_name")]
        public string ProductSubName { get; set; }

        [JsonPropertyName("spu_id")]
        public string SpuId { get; set; }

        [JsonPropertyName("wx_miniprogram_username")]
        public string WxMiniprogramUsername { get; set; }

        [JsonPropertyName("shop_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ShopId { get; set; }

        [JsonPropertyName("shop_name")]
        public string ShopName { get; set; }

        [JsonPropertyName("unique_spu_id")]
        public string UniqueSpuId { get; set; }

        [JsonPropertyName("brand_name")]
        public string BrandName { get; set; }

        [JsonPropertyName("activity_info")]
        public object ActivityInfo { get; set; }

        [JsonPropertyName("select_tag_name_list")]
        public object[] SelectTagNameList { get; set; }
    }

    public partial class CategoryInfo
    {
        [JsonPropertyName("first_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long FirstCategoryId { get; set; }

        [JsonPropertyName("second_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SecondCategoryId { get; set; }

        [JsonPropertyName("third_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ThirdCategoryId { get; set; }

        [JsonPropertyName("first_category_name")]
        public string FirstCategoryName { get; set; }

        [JsonPropertyName("second_category_name")]
        public string SecondCategoryName { get; set; }

        [JsonPropertyName("third_category_name")]
        public string ThirdCategoryName { get; set; }

        [JsonPropertyName("simple_first_category_id")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SimpleFirstCategoryId { get; set; }

        [JsonPropertyName("simple_first_category_name")]
        public string SimpleFirstCategoryName { get; set; }
    }

    public partial class Coupon
    {
        [JsonPropertyName("bind_type")]
        public long BindType { get; set; }

        [JsonPropertyName("discount")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Discount { get; set; }

        [JsonPropertyName("link")]
        public Uri Link { get; set; }

        [JsonPropertyName("platform_type")]
        public long PlatformType { get; set; }

        [JsonPropertyName("quota")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Quota { get; set; }

        [JsonPropertyName("get_start_time")]
        public DateTimeOffset GetStartTime { get; set; }

        [JsonPropertyName("get_end_time")]
        public DateTimeOffset GetEndTime { get; set; }

        [JsonPropertyName("use_start_time")]
        public DateTimeOffset UseStartTime { get; set; }

        [JsonPropertyName("use_end_time")]
        public DateTimeOffset UseEndTime { get; set; }

        [JsonPropertyName("is_best")]
        public long IsBest { get; set; }

        [JsonPropertyName("hot_value")]
        public long HotValue { get; set; }

        [JsonPropertyName("remain_quantity")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long RemainQuantity { get; set; }

        [JsonPropertyName("total_quantity")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long TotalQuantity { get; set; }

        [JsonPropertyName("coupon_no")]
        public string CouponNo { get; set; }

        [JsonPropertyName("coupon_name")]
        public string CouponName { get; set; }

        [JsonPropertyName("coupon_type")]
        public long CouponType { get; set; }
    }

    public partial class Sale
    {
        [JsonPropertyName("sales_on_source")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SalesOnSource { get; set; }

        [JsonPropertyName("sales_on_ams")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SalesOnAms { get; set; }

        [JsonPropertyName("sales_on_flow")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SalesOnFlow { get; set; }

        [JsonPropertyName("sales_of_kol")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long SalesOfKol { get; set; }
    }

    public partial class GoodModel
    {
        public static GoodModel FromJson(string json) => JsonSerializer.Deserialize<GoodModel>(json, WeChatPublish.RequestModel.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this GoodModel self) => JsonSerializer.Serialize(self, WeChatPublish.RequestModel.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerOptions Settings = new(JsonSerializerDefaults.General)
        {
            Converters =
            {
                new DateOnlyConverter(),
                new TimeOnlyConverter(),
                IsoDateTimeOffsetConverter.Singleton
            },
        };
    }

    internal class ParseStringConverter : JsonConverter<long>
    {
        public override bool CanConvert(Type t) => t == typeof(long);

        public override long Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var value = reader.GetString();
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void Write(Utf8JsonWriter writer, long value, JsonSerializerOptions options)
        {
            JsonSerializer.Serialize(writer, value.ToString(), options);
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
    
    public class DateOnlyConverter : JsonConverter<DateOnly>
    {
        private readonly string serializationFormat;
        public DateOnlyConverter() : this(null) { }

        public DateOnlyConverter(string? serializationFormat)
        {
            this.serializationFormat = serializationFormat ?? "yyyy-MM-dd";
        }

        public override DateOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var value = reader.GetString();
            return DateOnly.Parse(value!);
        }

        public override void Write(Utf8JsonWriter writer, DateOnly value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.ToString(serializationFormat));
    }

    public class TimeOnlyConverter : JsonConverter<TimeOnly>
    {
        private readonly string serializationFormat;

        public TimeOnlyConverter() : this(null) { }

        public TimeOnlyConverter(string? serializationFormat)
        {
            this.serializationFormat = serializationFormat ?? "HH:mm:ss.fff";
        }

        public override TimeOnly Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            var value = reader.GetString();
            return TimeOnly.Parse(value!);
        }

        public override void Write(Utf8JsonWriter writer, TimeOnly value, JsonSerializerOptions options)
            => writer.WriteStringValue(value.ToString(serializationFormat));
    }

    internal class IsoDateTimeOffsetConverter : JsonConverter<DateTimeOffset>
    {
        public override bool CanConvert(Type t) => t == typeof(DateTimeOffset);

        private const string DefaultDateTimeFormat = "yyyy'-'MM'-'dd'T'HH':'mm':'ss.FFFFFFFK";

        private DateTimeStyles _dateTimeStyles = DateTimeStyles.RoundtripKind;
        private string? _dateTimeFormat;
        private CultureInfo? _culture;

        public DateTimeStyles DateTimeStyles
        {
            get => _dateTimeStyles;
            set => _dateTimeStyles = value;
        }

        public string? DateTimeFormat
        {
            get => _dateTimeFormat ?? string.Empty;
            set => _dateTimeFormat = (string.IsNullOrEmpty(value)) ? null : value;
        }

        public CultureInfo Culture
        {
            get => _culture ?? CultureInfo.CurrentCulture;
            set => _culture = value;
        }

        public override void Write(Utf8JsonWriter writer, DateTimeOffset value, JsonSerializerOptions options)
        {
            string text;


            if ((_dateTimeStyles & DateTimeStyles.AdjustToUniversal) == DateTimeStyles.AdjustToUniversal
                || (_dateTimeStyles & DateTimeStyles.AssumeUniversal) == DateTimeStyles.AssumeUniversal)
            {
                value = value.ToUniversalTime();
            }

            text = value.ToString(_dateTimeFormat ?? DefaultDateTimeFormat, Culture);

            writer.WriteStringValue(text);
        }

        public override DateTimeOffset Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? dateText = reader.GetString();

            if (string.IsNullOrEmpty(dateText) == false)
            {
                if (!string.IsNullOrEmpty(_dateTimeFormat))
                {
                    return DateTimeOffset.ParseExact(dateText, _dateTimeFormat, Culture, _dateTimeStyles);
                }
                else
                {
                    return DateTimeOffset.Parse(dateText, Culture, _dateTimeStyles);
                }
            }
            else
            {
                return default(DateTimeOffset);
            }
        }


        public static readonly IsoDateTimeOffsetConverter Singleton = new IsoDateTimeOffsetConverter();
    }
}
#pragma warning restore CS8618
#pragma warning restore CS8601
#pragma warning restore CS8603
